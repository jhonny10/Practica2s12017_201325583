/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Froms;

import com.squareup.okhttp.FormEncodingBuilder;
import com.squareup.okhttp.RequestBody;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author jhonny
 */
public class MatrizDispersa extends javax.swing.JFrame {
    private String pathImg = "";
    private Principal p;
    /**
     * Creates new form MatrizDispersa
     * @param p
     */
    public MatrizDispersa(Principal p) {
        this.p = p;
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatrizDispersa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatrizDispersa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatrizDispersa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatrizDispersa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbeliminar = new javax.swing.JButton();
        jbagregar = new javax.swing.JButton();
        btnletra = new javax.swing.JButton();
        btnDominio = new javax.swing.JButton();
        txtAgregar = new javax.swing.JTextField();
        txtEliminar = new javax.swing.JTextField();
        txtletra = new javax.swing.JTextField();
        txtDominio = new javax.swing.JTextField();
        labelReporte = new javax.swing.JLabel();
        jbgenerar = new javax.swing.JButton();
        jbrecargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                cerrando(evt);
            }
        });

        jbeliminar.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jbeliminar.setText("Eliminar");
        jbeliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbeliminarActionPerformed(evt);
            }
        });

        jbagregar.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jbagregar.setText("Agregar");
        jbagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbagregarActionPerformed(evt);
            }
        });

        btnletra.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btnletra.setText("Buscar Letra");
        btnletra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnletraActionPerformed(evt);
            }
        });

        btnDominio.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btnDominio.setText("Buscar Dominio");
        btnDominio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDominioActionPerformed(evt);
            }
        });

        txtAgregar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        txtAgregar.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtEliminar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        txtEliminar.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtletra.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        txtletra.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDominio.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        txtDominio.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jbgenerar.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jbgenerar.setText("Generar img");
        jbgenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbgenerarActionPerformed(evt);
            }
        });

        jbrecargar.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jbrecargar.setText("Recargar img");
        jbrecargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbrecargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtletra, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(jbeliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(txtAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jbagregar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(txtDominio, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(btnletra))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addComponent(btnDominio))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jbgenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jbrecargar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(16, 16, 16)
                .addComponent(labelReporte, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(txtAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jbagregar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(txtEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jbeliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(txtletra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnletra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(txtDominio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnDominio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jbgenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jbrecargar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(labelReporte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbeliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbeliminarActionPerformed
        // TODO add your handling code here:
        if(!txtEliminar.getText().equals("")){
            String var[] = txtEliminar.getText().split("@");
            try{
                
                System.out.println("********proceso eliminar*************");
                String dato = var[0]; //palabra
                    String dato2 = var[1];//dominio
                    
                    String valor = "";
                    
                    for(int i = 0 ; i < dato2.length(); i++){
                        if(dato2.charAt(i) == (char)46){
                            break;
                        }
                        valor += dato2.charAt(i);
                    }

                    RequestBody rb = new FormEncodingBuilder()
                        .add("dato", valor)
                        .add("dato2", dato)
                        .build();

                    String eliminar = Lista.getString("eliminar", rb);
                    System.out.println(eliminar);
                    
                    RequestBody rb2 = new FormEncodingBuilder()
                        .add("dato", "unico")
                        .build();
                    
                    String recorrido = Lista.getString("recorrerMatriz", rb2);
                    //System.out.println(recorrido);
                    
                    String pathTxt = Metodos.generarTxt("matrizDispersa", recorrido);
                    pathImg = Metodos.generarImagen(pathTxt, "matrizDispersa");
                    
                System.out.println("********procesos eliminar*************");
                System.out.println("");
            }catch(Exception ex){
                System.out.println("********Error eliminar*************");
                System.out.println(ex.getMessage());
                System.out.println("********Error eliminar*************");
                System.out.println("");
            }
        }
    }//GEN-LAST:event_jbeliminarActionPerformed

    private void jbagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbagregarActionPerformed
        // TODO add your handling code here:
        if(!txtAgregar.getText().equals("")){
            String var[] = txtAgregar.getText().split("@");
            
            if(var.length == 2){
                try{        
                    String dato = var[0]; //palabra
                    String dato2 = var[1];//dominio
                    String valor = "";
                    
                    for(int i = 0 ; i < dato2.length(); i++){
                        if(dato2.charAt(i) == (char)46){
                            break;
                        }
                        valor += dato2.charAt(i);
                    }
                    RequestBody rb = new FormEncodingBuilder()
                        .add("dato", valor)
                        .add("dato2", dato)
                        .build();

                    String agregado = Lista.getString("agregarDispersa", rb);
                    System.out.println("*********proceso agregar************");
                    System.out.println(agregado);
                    
                    RequestBody rb2 = new FormEncodingBuilder()
                        .add("dato", "unico")
                        .build();
                    
                    String recorrido = Lista.getString("recorrerMatriz", rb2);
                    System.out.println(recorrido);
                    System.out.println("**********proceso agregar***********");
                    
                    String pathTxt = Metodos.generarTxt("matrizDispersa", recorrido);
                    pathImg = Metodos.generarImagen(pathTxt, "matrizDispersa");
                }catch(Exception ex){
                    
                    System.out.println("********Error al agregar*************");
                    System.out.println(ex.getMessage());
                    System.out.println("********Error al agregar*************");
                }
            }
        }
    }//GEN-LAST:event_jbagregarActionPerformed

    private void btnletraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnletraActionPerformed
        // TODO add your handling code here:
        if(!txtletra.getText().equals("")){
            try{
                RequestBody rb2 = new FormEncodingBuilder()
                .add("dato", txtletra.getText())
                .build();
            
                System.out.println("********proceso busquedad por letra*************");
            String recorrido = Lista.getString("recorrerLetra", rb2);
//            System.out.println("Recorrido por Letra");
            //System.out.println(recorrido);
            
            RequestBody rb = new FormEncodingBuilder()
                .add("dato", txtletra.getText())
                .build();
            
            String lista = Lista.getString("recorrerLetraLista", rb);
                System.out.println(lista);
            
            System.out.println("********proceso busquedad por letra*************");
            System.out.println("");
            //en recorrido mandar el digraph ejemplo{ rankdir = "LR" + recorrido + }
            String pathTxt = Metodos.generarTxt("matrizLetra", recorrido);
                    pathImg = Metodos.generarImagen(pathTxt, "matrizLetra");
            }catch(Exception ex){
                
            System.out.println("********error busquedad por letra*************");
                System.out.println(ex.getMessage());
                
            System.out.println("********error busquedad por letra*************");
                System.out.println("");
            }
        }
    }//GEN-LAST:event_btnletraActionPerformed

    private void btnDominioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDominioActionPerformed
        // TODO add your handling code here:
        if(!txtDominio.getText().equals("")){
                String valor = "";
                    
                    for(int i = 0 ; i < txtDominio.getText().length(); i++){
                        if(txtDominio.getText().charAt(i) == (char)46){
                            break;
                        }
                        valor += txtDominio.getText().charAt(i);
                    }
            try{
                RequestBody rb2 = new FormEncodingBuilder()
                .add("dato", valor)
                .build();
                    
            System.out.println("********proceso busquedad por dominio*************");
            String recorrido = Lista.getString("recorrerDominio", rb2);
//            System.out.println("");
//            System.out.println("Recorrido por Dominio");
            //System.out.println(recorrido);
             RequestBody rb = new FormEncodingBuilder()
                .add("dato", valor)
                .build();
            
            String lista = Lista.getString("recorrerDominioLista", rb);
                System.out.println(lista);
            
            System.out.println("********proceso busquedad por dominio*************");
            System.out.println("");
            String pathTxt = Metodos.generarTxt("matrizDominio", recorrido);
                    pathImg = Metodos.generarImagen(pathTxt, "matrizDominio");
            }catch(Exception ex){
                System.out.println("********error busquedad por dominio*************");
                System.out.println(ex.getMessage());
                System.out.println("********error busquedad por dominio*************");
                
                System.out.println("");
            }
        }
    }//GEN-LAST:event_btnDominioActionPerformed

    private void jbgenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbgenerarActionPerformed
        // TODO add your handling code here:
        RequestBody rb2 = new FormEncodingBuilder()
                        .add("dato", "unico")
                        .build();
                    
                    String recorrido = Lista.getString("recorrerMatriz", rb2);
                    //System.out.println(recorrido);
                    
                    String pathTxt = Metodos.generarTxt("matrizDispersa", recorrido);
                    pathImg = Metodos.generarImagen(pathTxt, "matrizDispersa");
    }//GEN-LAST:event_jbgenerarActionPerformed

    private void jbrecargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbrecargarActionPerformed
        // TODO add your handling code here:
        labelReporte.setIcon(new ImageIcon(Metodos.icono(pathImg, labelReporte.getWidth(), labelReporte.getHeight())));
            labelReporte.setIcon(new ImageIcon(Metodos.icono(pathImg, labelReporte.getWidth(), labelReporte.getHeight())));
    }//GEN-LAST:event_jbrecargarActionPerformed

    private void cerrando(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_cerrando
        // TODO add your handling code here:
        this.setVisible(false);
        p.setVisible(true);
    }//GEN-LAST:event_cerrando

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDominio;
    private javax.swing.JButton btnletra;
    private javax.swing.JButton jbagregar;
    private javax.swing.JButton jbeliminar;
    private javax.swing.JButton jbgenerar;
    private javax.swing.JButton jbrecargar;
    private javax.swing.JLabel labelReporte;
    private javax.swing.JTextField txtAgregar;
    private javax.swing.JTextField txtDominio;
    private javax.swing.JTextField txtEliminar;
    private javax.swing.JTextField txtletra;
    // End of variables declaration//GEN-END:variables
}
